#ifndef MAPSTUB_HPP
#define MAPSTUB_HPP

//
// Created by Dmitry Morozov on 24/3/23.
//

#include "interface/IMap.hpp"
#include "interface/IEntity.hpp"
#include <memory>
#include <string>
#include <vector>

class MapStub : public IMap {
public:

  MapStub(std::shared_ptr<IMap>mapViz)
    : mapViz_(std::move(mapViz)) {}

  ~MapStub() override = default;

  [[nodiscard]] std::size_t        width() const override {
    return width_;
  };
  [[nodiscard]] std::size_t        height() const override {
    return height_;
  };
  [[nodiscard]] const std::string& GetMap() const override {
    return default_map_;
  };

  void PrintMap(const std::string& default_map_,
                const std::size_t& width_,
                const std::size_t& height_) override
  {
    mapViz_->PrintMap(default_map_, width_, height_);
  }

private:

  std::size_t width_  = 50;
  std::size_t height_ = 25;

  std::string map_;

  // Debug purposes only

  const std::string default_map_ =
    "##################################################"
    "##################################################"
    "##################################################"
    "##################################################"
    "##################################################"
    "##################################################"
    "##################################################"
    "##################################################"
    "#############mmmmmmmmmmmmmmmmmmmmm################"
    "##################################################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################b##########b####################"
    "##################################################"
    "##################s##########s####################"
    "###################ssssssssss#####################"
    "##################################################"
    "##################################################"
    "##################################################";


  //  const std::string default_map_ =
  //
  //  "########################################################################################################################################################################################################"
  //
  //  "#####################c#############################################################################################c#######################bbcbc########################################################"
  //
  //  "#################################################################################bbbbbbbbbb####bbbc################################bbb#################################################################s"
  //
  //  "############################################################################m#########################################################################################################################ss"
  //
  //  "##############c####bcbcb##################################################bbcbb########################bb#######c##c##c#######b##############bb########s##s##########ss##s#########bbcb##############sss"
  //
  //  "##################################################################################################b###################################################ss##ss########sss##ss#########################ssss"
  //
  //  "#####################################################################################################################################################sss##sss######ssss##sss#######################sssss"
  //
  //  "######################m#######p####m####p######m#####p#####m###p########m######################m###########################################m########ssss##ssss####sssss##ssss###p####m#####p######ssssss";

private:

  std::shared_ptr<IMap>mapViz_;
};

#endif // MAPSTUB_HPP
